# common configuration for ALL branches
image: Visual Studio 2017
install:
  - choco install gitversion.portable -pre -y
  - ps: (new-object Net.WebClient).DownloadString("https://raw.github.com/madskristensen/ExtensionScripts/master/AppVeyor/vsix.ps1") | iex  
test: off
assembly_info:
  patch: false
environment:
  VERSION_INFO_SEMVER: null
  VERSION_INFO: null
  VERSION_INFO_NUGET: null
nuget:
  disable_publish_on_pr: true
# Start builds on tags only (GitHub and BitBucket)
skip_non_tags: true

before_build:
- ps: >-
    function Vsix-UpdateVsixVersion 
    {
        [cmdletbinding()]
        param (
          [Parameter(Position=0, Mandatory=1,ValueFromPipelineByPropertyName=$true)]
          [string]$version,
          [switch]$updateBuildVersion = $true
        )      
        process 
        {
            "Updating VSIX version..." | Write-Host  -ForegroundColor Cyan -NoNewline
            $manifestFiles = Get-ChildItem -Filter *.vsixmanifest -Recurse;

            $vsixManifest = $manifestFiles[$manifestFiles.Count - 1];
            Write-Host $vsixManifest.Fullname -ForegroundColor Yellow;  
            [xml]$vsixXml = Get-Content $vsixManifest.Fullname;

            $ns = New-Object System.Xml.XmlNamespaceManager $vsixXml.NameTable;
            $ns.AddNamespace("ns", $vsixXml.DocumentElement.NamespaceURI) | Out-Null;

            $attrVersion = "";
            if ($vsixXml.SelectSingleNode("//ns:Identity", $ns)){ # VS2012 format
                $attrVersion = $vsixXml.SelectSingleNode("//ns:Identity", $ns).Attributes["Version"];
            }
            elseif ($vsixXml.SelectSingleNode("//ns:Version", $ns)){ # VS2010 format
                $attrVersion = $vsixXml.SelectSingleNode("//ns:Version", $ns);
            }

            $attrVersion.InnerText = $version;

            $vsixXml.Save($vsixManifest) | Out-Null;

            Write-Host "Manifest succesfully updated to version '$($version_info.SemVer)'" -ForegroundColor Green;

            if ($updateBuildVersion -and $env:APPVEYOR_BUILD_VERSION -ne $version.ToString())
            {
                Vsix-UpdateBuildVersion $version | Out-Null
            }

            $vsixXmlAsText = Get-Content $vsixManifest.Fullname;
            Write-Host $vsixXmlAsText -ForegroundColor Yellow;

            # return the values to the pipeline
            New-Object PSObject -Property @{
                'vsixFilePath' = $vsixManifest.Fullname
                'Version' = $version
            }
        }
    }

    $version_info_json = (gitversion /l console /output json);
    $version_info = (gitversion /output json | ConvertFrom-Json);
    $env:VERSION = $version_info;
    $env:VERSION_INFO = $version_info;
    $env:VERSION_INFO_SEMVER = $version_info.SemVer;
    $env:VERSION_INFO_NUGET = $version_info.NuGetVersion;

    Write-Host "SemVer = $($version_info.SemVer)" -ForegroundColor Red;
    Write-Host "NuGetVersion = $($version_info.NuGetVersion)" -ForegroundColor Red;
    
    Vsix-UpdateVsixVersion $version_info.SemVer | Vsix-UpdateBuildVersion;

cache:
  - packages -> **\packages.config
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

build_script:
  - build.bat /t:Build /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal /v:m

after_build:
  - ps: Vsix-PushArtifacts | Vsix-PublishToGallery
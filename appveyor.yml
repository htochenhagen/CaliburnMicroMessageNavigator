# common configuration for ALL branches
image: Visual Studio 2017
install:
  - choco install gitversion.portable -pre -y
  - ps: (new-object Net.WebClient).DownloadString("https://raw.github.com/madskristensen/ExtensionScripts/master/AppVeyor/vsix.ps1") | iex  
test: off
assembly_info:
  patch: false
nuget:
  disable_publish_on_pr: true
# Start builds on tags only (GitHub and BitBucket)
# skip_non_tags: true

before_build:
- ps: >-
    function Vsix-UpdateVsixVersion {
        [cmdletbinding()]
        param (
            [Parameter(Position=0, Mandatory=0,ValueFromPipeline=$true)]
            [string[]]$manifestFilePath = ".\source.extension.vsixmanifest",

            [Parameter(Position=1, Mandatory=0)]
            [int]$buildNumber = $env:APPVEYOR_BUILD_NUMBER,

            [ValidateSet("build","revision")]
            [Parameter(Position=2, Mandatory=0)]
            [string]$versionType = "build",

            [switch]$updateBuildVersion
        )
        process {
            foreach($manifestFile in $manifestFilePath)
            {
                "Updating VSIX version..." | Write-Host  -ForegroundColor Cyan -NoNewline
                $matches = (Get-ChildItem $manifestFile -Recurse)
                $vsixManifest = $matches[$matches.Count - 1] # Get the last one which matches the top most file in the recursive matches
                [xml]$vsixXml = Get-Content $vsixManifest

                $ns = New-Object System.Xml.XmlNamespaceManager $vsixXml.NameTable
                $ns.AddNamespace("ns", $vsixXml.DocumentElement.NamespaceURI) | Out-Null

                $attrVersion = ""

                if ($vsixXml.SelectSingleNode("//ns:Identity", $ns)){ # VS2012 format
                    $attrVersion = $vsixXml.SelectSingleNode("//ns:Identity", $ns).Attributes["Version"]
                }
                elseif ($vsixXml.SelectSingleNode("//ns:Version", $ns)){ # VS2010 format
                    $attrVersion = $vsixXml.SelectSingleNode("//ns:Version", $ns)
                }

                [Version]$version = $attrVersion.Value

                if (!$attrVersion.Value){
                    $version = $attrVersion.InnerText
                }

                $version = New-Object Version ([int]$gitversion_info.Major),([int]$gitversion_info.Minor),([int]$gitversion_info.Patch)
                $attrVersion.InnerText = $version

                $vsixXml.Save($vsixManifest) | Out-Null

                $version.ToString() | Write-Host -ForegroundColor Green

                if ($updateBuildVersion -and $env:APPVEYOR_BUILD_VERSION -ne $version.ToString())
                {
                    Vsix-UpdateBuildVersion $version | Out-Null
                }

                # return the values to the pipeline
                New-Object PSObject -Property @{
                    'vsixFilePath' = $vsixManifest
                    'Version' = $version
                }
            }
        }
    }

    $version_info_json = (gitversion /l console /output json);
    $gitversion_info = (gitversion /output json | ConvertFrom-Json);

    Vsix-UpdateVsixVersion | Vsix-UpdateBuildVersion;

cache:
  - packages -> **\packages.config
  - C:\ProgramData\chocolatey\bin -> appveyor.yml
  - C:\ProgramData\chocolatey\lib -> appveyor.yml

build_script:
  - build.bat /t:Build /p:DeployExtension=false /p:ZipPackageCompressionLevel=normal /v:m

after_build:
  - ps: Vsix-PushArtifacts | Vsix-PublishToGallery